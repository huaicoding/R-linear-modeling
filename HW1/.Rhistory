q()
load("C:/Users/Javis/Desktop/STAT 151/R-linear-modeling/.RData")
git add .
ggplot(data, aes(x = energy, y = track_popularity)) + geom_point()
library(tidyverse)
library(ggpubr)
data <- read.csv("spotify_songs.csv", encoding = "UTF - 8")
getwd()
setwd(dir = "C:/Users/Javis/Desktop/STAT 151/R-linear-modeling/HW1")
data <- read.csv("spotify_songs.csv", encoding = "UTF - 8")
ggplot(data, aes(x = energy, y = track_popularity)) + geom_point()
model <- lm(track_popularity ~ energy, data = data)
summary(model)
ggplot(data, aes(energy, track_popularity)) + geom_point() +
stat_smooth(method = lm)
ggplot(data, aes(x = energy, y = track_popularity > 5)) + geom_point()
model <- lm(track_popularity > 5 ~ energy, data = data)
summary(model)
ggplot(data, aes(energy, track_popularity > 5)) + geom_point() +
stat_smooth(method = lm)
data_2 <- data[which(data$track_popularity > 5)]
data_2 <- data[which(data$track_popularity > 5),]
ggplot(data_2, aes(x = energy, y = track_popularity )) + geom_point()
model <- lm(track_popularity ~ energy, data = data_2)
summary(model)
ggplot(data_2, aes(energy, track_popularity)) + geom_point() +
stat_smooth(method = lm)
data_2 <- data[which(data$track_popularity > 10),]
ggplot(data_2, aes(x = energy, y = track_popularity )) + geom_point()
model <- lm(track_popularity ~ energy, data = data_2)
summary(model)
ggplot(data_2, aes(energy, track_popularity)) + geom_point() +
stat_smooth(method = lm)
summary(model)$coef
data <- read.csv("bodyfat.csv", encoding = "UTF - 8")
model <- lm(bodyfa ~ Weight + Height, data = data)
data <- read.csv("bodyfat.csv", encoding = "UTF - 8")
model <- lm(bodyfat ~ Weight + Height, data = data)
summary (model)
summary(modle)$call + coef
summary(model)$call + coef
summary(modle)$call + summary(modle)$coef
summary(model)$call + summary(model)$coef
summary(modle)$call&coef
summary(model)$call&coef
summary(model)$call
summary(model)$coef
x1 <- data$Weight
x2 <- data$Height
y <- data$bodyfat
X <- matrix(c(rep(1, length(x1)), x1, x2), nrow = length(x1))
Y <- matrix(y)
X
Y
beta_hat <- solve(t(X) %*% X) %*% t(X) %*% y
beta_hat
